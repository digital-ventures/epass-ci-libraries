on:
  workflow_call:
jobs:
  BuildAndRelease:
    # runs-on: ubuntu-latest
    runs-on: [self-hosted, b2p]
    container: openjdk:17-jdk-alpine3.14
    steps:
      - name: AddAPK
        run: apk --no-cache add git jq tar openssh

      - name: CheckOut
        uses: actions/checkout@v3
        with: 
          ssh-key: "${{ secrets.SSH_PRIVATE_KEY }}"
          ssh-strict: 'StrictHostKeyChecking=no'
          submodules: false   #set-safe-directory option of checkout didn't work
          fetch-depth: 0
          token: ${{ secrets.EPASS_GIT_TOKEN }}

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: GitConfig
        run: |
          git config --global user.name ${{ secrets.EPASS_GIT_USER }}
          git config --global user.email ${{ secrets.EPASS_GIT_USER }}@dv.co.th
          git config --global --add safe.directory ${GITHUB_WORKSPACE}

      - name: CheckTepSubmodule
        run: |
          echo "Check tep-common"
          if cat .gitmodules | grep tep-common > /dev/null ; then
            rm -rf tep-common
            git submodule add --force --name tep-common https://${{ secrets.EPASS_GIT_USER }}:${{ secrets.EPASS_GIT_TOKEN }}@github.com/digital-ventures/tep-common tep-common
            echo -e "\e[92m tep-common is added \e[0m"
          else
            echo -e "\e[31m tep-common is not found \e[0m"
          fi
        continue-on-error: true

      - name: CheckSubmoduleExited
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: ".gitmodules"

      - name: UpdateSubmodule
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          git submodule update --remote -f --init
          git checkout HEAD .gitmodules
        continue-on-error: true

      - name: DockerLoginB2P
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.B2P_ACR_REGISTRY }}
          username: ${{ secrets.B2P_ACR_USER }}
          password: ${{ secrets.B2P_ACR_TOKEN }}

      - name: DockerLoginCFD
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.EPASS_ACR_REGISTRY }}
          username: ${{ secrets.EPASS_ACR_USER }}
          password: ${{ secrets.EPASS_ACR_TOKEN }}
          
      - name: RemoveFilesBeforeBuild
        run:
          rm -rf ./src/main/resources/application.yml
          rm -rf ./src/main/resources/application.properties

      - name: BuildImage
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.2
          arguments: |
              jib
              --image=${{ secrets.EPASS_ACR_REGISTRY }}/backend/${{ secrets.EPASS_SERVICENAME }}:epass-${{ github.ref_name }}
